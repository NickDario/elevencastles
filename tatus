[1mdiff --git a/public/assets/js/castles/c8/vehicles3/Fuel.js b/public/assets/js/castles/c8/vehicles3/Fuel.js[m
[1mindex d83d364..a63c9b4 100644[m
[1m--- a/public/assets/js/castles/c8/vehicles3/Fuel.js[m
[1m+++ b/public/assets/js/castles/c8/vehicles3/Fuel.js[m
[36m@@ -8,7 +8,11 @@[m [mdefine(['etc/VectorND', 'c8/vehicles3/Genome'], function(Vector, Genome){[m
     {[m
         this.center = config['center'] != null ? config['center'] : new Vector;[m
         this.radius = 10;[m
[31m-        this.genome = {};[m
[32m+[m[32m        if(config.genome == null){[m
[32m+[m[32m            this._initBaseGenome();[m
[32m+[m[32m        } else {[m
[32m+[m[32m            Genome.call(this, config.genome.genes);[m
[32m+[m[32m        }[m
 [m
         this.spore = 150;[m
         this.ttd = 500;[m
[36m@@ -18,10 +22,10 @@[m [mdefine(['etc/VectorND', 'c8/vehicles3/Genome'], function(Vector, Genome){[m
     };[m
 [m
     Fuel.constructor = Fuel;[m
[32m+[m[32m    $.extend(Fuel.prototype, Genome.prototype);[m
     Fuel.prototype.init = function()[m
     {[m
         this._initIdentity();[m
[31m-        this._initGenome();[m
     };[m
 [m
     Fuel.prototype._initIdentity = function()[m
[36m@@ -48,9 +52,9 @@[m [mdefine(['etc/VectorND', 'c8/vehicles3/Genome'], function(Vector, Genome){[m
         this.type = 'fuel';[m
     };[m
 [m
[31m-    Fuel.prototype._initGenome = function()[m
[32m+[m[32m    Fuel.prototype._initBaseGenome = function()[m
     {[m
[31m-        this.genome = new Genome({[m
[32m+[m[32m        Genome.call(this, {[m
             radius     : {[m
                 name: 'radius',[m
                 val : 6,[m
[36m@@ -76,9 +80,9 @@[m [mdefine(['etc/VectorND', 'c8/vehicles3/Genome'], function(Vector, Genome){[m
 [m
     Fuel.prototype.getColor = function()[m
     {[m
[31m-        var r = this.genome.getGene('red');[m
[31m-        var g = this.genome.getGene('green');[m
[31m-        var b = this.genome.getGene('blue');[m
[32m+[m[32m        var r = this.getGene('red');[m
[32m+[m[32m        var g = this.getGene('green');[m
[32m+[m[32m        var b = this.getGene('blue');[m
         if(this.ttd < 150){[m
             r = 81;[m
             g = 89;[m
[36m@@ -94,7 +98,7 @@[m [mdefine(['etc/VectorND', 'c8/vehicles3/Genome'], function(Vector, Genome){[m
 [m
     Fuel.prototype.reproduce = function(w, h)[m
     {[m
[31m-        var s = this.genome.getGene('spread');[m
[32m+[m[32m        var s = this.getGene('spread');[m
         var x = this.center.getX() + 2 * s * Math.random() - s;[m
         var y = this.center.getY() + 2 * s * Math.random() - s;[m
         if(x > w) {[m
[36m@@ -107,7 +111,7 @@[m [mdefine(['etc/VectorND', 'c8/vehicles3/Genome'], function(Vector, Genome){[m
             y = y + h;[m
         }[m
         return new Fuel({[m
[31m-            genome: this.genome.replicate(),[m
[32m+[m[32m            genes: this.replicateGenome(),[m
             center: new Vector([m
                 (x % w),[m
                 (y % h)[m
[36m@@ -127,7 +131,7 @@[m [mdefine(['etc/VectorND', 'c8/vehicles3/Genome'], function(Vector, Genome){[m
         if(this.spore > 0){[m
             ctx.arc(this.center.getX(), this.center.getY(), 3, 0, 2*Math.PI);[m
         } else {[m
[31m-            ctx.arc(this.center.getX(), this.center.getY(), this.genome.getGene('radius'), 0, 2*Math.PI);[m
[32m+[m[32m            ctx.arc(this.center.getX(), this.center.getY(), this.getGene('radius'), 0, 2*Math.PI);[m
         }[m
         ctx.fill();[m
     };[m
[1mdiff --git a/public/assets/js/castles/c8/vehicles3/Gene.js b/public/assets/js/castles/c8/vehicles3/Gene.js[m
[1mindex aa134bc..79593d7 100644[m
[1m--- a/public/assets/js/castles/c8/vehicles3/Gene.js[m
[1m+++ b/public/assets/js/castles/c8/vehicles3/Gene.js[m
[36m@@ -5,12 +5,12 @@[m
 define(function(){[m
 [m
     var Gene = function(config){[m
[32m+[m[32m        this.type = 'gene';[m
         this.name = config['name'] != null ? config['name'] : 'bGene'; //  Identifier for Gene[m
         this.val  = config['val'] != null ? config['val'] : 1;       //  Value of Gene[m
         this.mr  = config['mr'] != null ? config['mr'] : 2;          //  Mutation Rate[m
         this.ms = config['ms'] != null ? config['ms'] : 1;      //  Mutation Step[m
         this.minv = config['minv'] != null ? config['minv'] : 0.1;[m
[31m-        this.type = 'gene';[m
     };[m
 [m
     Gene.constructor = Gene;[m
[1mdiff --git a/public/assets/js/castles/c8/vehicles3/Genome.js b/public/assets/js/castles/c8/vehicles3/Genome.js[m
[1mindex e49011a..cde1638 100644[m
[1m--- a/public/assets/js/castles/c8/vehicles3/Genome.js[m
[1m+++ b/public/assets/js/castles/c8/vehicles3/Genome.js[m
[36m@@ -7,15 +7,17 @@[m [mdefine([m
 ['c8/vehicles3/Gene'],[m
 function(Gene){[m
 [m
[31m-    var Genome = function(subject, genes)[m
[32m+[m[32m    var Genome = function(genes)[m
     {[m
[31m-        this.genes = {};[m
         this.type = 'genome';[m
[31m-        this.subject = subject;[m
[31m-[m
[31m-        for(var t in genes){[m
[31m-            if(typeof genes[t] == 'object'){[m
[31m-                this.genes[t] = new Gene(genes[t]);[m
[32m+[m[32m        this.genes = {};[m
[32m+[m[32m        for(var t in genes) {[m
[32m+[m[32m            if(typeof genes[t] == 'object') {[m
[32m+[m[32m                if(genes[t].type == 'genome') {[m
[32m+[m[32m                    this.genes[t] = new Genome(genes[t])[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    this.genes[t] = new Gene(genes[t]);[m
[32m+[m[32m                }[m
             } else {[m
                 this.genes[t] = new Gene({[m
                     name: t,[m
[36m@@ -23,13 +25,19 @@[m [mfunction(Gene){[m
                 });[m
             }[m
         }[m
[32m+[m
[32m+[m[32m        return this;[m
     };[m
 [m
     Genome.constructor = Genome;[m
[31m-    Genome.prototype.addGenes = function(traits){[m
[32m+[m[32m    Genome.prototype.addGenes = function(traits) {[m
         for(var t in traits){[m
[31m-            if(typeof traits[t] == 'object'){[m
[31m-                this.genes[t] = new Gene(traits[t]);[m
[32m+[m[32m            if(typeof traits[t] == 'object') {[m
[32m+[m[32m                if(traits[t].type == 'genome') {[m
[32m+[m[32m                    this.genes[t] = new Genome(traits[t]);[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    this.genes[t] = new Gene(traits[t]);[m
[32m+[m[32m                }[m
             } else {[m
                 this.genes[t] = new Gene({[m
                     name: t,[m
[36m@@ -39,31 +47,17 @@[m [mfunction(Gene){[m
         }[m
     };[m
 [m
[31m-    Genome.prototype.getGene = function(gene)[m
[31m-    {[m
[31m-[m
[31m-        return this.genes[gene] != null ? this.genes[gene].val : 0;[m
[31m-    };[m
[31m-[m
[31m-    Genome.prototype.removeGenes = function(traits){[m
[31m-        for(var t in traits){[m
[31m-            if(this.genes.hasOwnProperty(t)){[m
[31m-                delete this.genes[t];[m
[31m-            }[m
[31m-        }[m
[32m+[m[32m    Genome.prototype.getGene = function(gene) {[m
[32m+[m[32m        return this.genes[gene] != null ? this.genes[gene].val : null;[m
     };[m
 [m
[31m-    Genome.prototype.mutate = function(){[m
[32m+[m[32m    Genome.prototype.mutate = function() {[m
         for(var i in this.genes){[m
[31m-            if(this.genes[i].type == 'gene'){[m
[31m-                this.genes[i].mutate();[m
[31m-            } else if(this.genes[i].type == 'genome'){[m
[31m-                this.genes[i].mutate();[m
[31m-            }[m
[32m+[m[32m            this.genes[i].mutate();[m
         }[m
     };[m
 [m
[31m-    Genome.prototype.replicate = function(){[m
[32m+[m[32m    Genome.prototype.replicateGenome = function() {[m
         var g = new Genome(this.genes);[m
         g.mutate();[m
         return g;[m
[1mdiff --git a/public/assets/js/castles/c8/vehicles3/Sense.js b/public/assets/js/castles/c8/vehicles3/Sense.js[m
[1mindex 3cc6832..e80a351 100644[m
[1m--- a/public/assets/js/castles/c8/vehicles3/Sense.js[m
[1m+++ b/public/assets/js/castles/c8/vehicles3/Sense.js[m
[36m@@ -8,6 +8,11 @@[m [mfunction(Segment, Vector, Genome)[m
     var Sense = function(config)[m
     {[m
         config = config || {};[m
[32m+[m[32m        if(config.genome == null){[m
[32m+[m[32m            this._initBaseGenome();[m
[32m+[m[32m        } else {[m
[32m+[m[32m            Genome.call(this, config.genome.genes);[m
[32m+[m[32m        }[m
 [m
         this.source = config['source'] != null ? config['source'] : new Vector();[m
         this.direction = config['direction'] != null ? config['direction'] : new Vector();[m
[36m@@ -15,26 +20,26 @@[m [mfunction(Segment, Vector, Genome)[m
         this.sensation  = new Vector(0,0);[m
 [m
         this.traits = config['traits'] != null ? config['traits'] : {};[m
[31m-        this.genome = config['genome'] != null ? config['genome'] : null;[m
[32m+[m[32m        //this.genome = config['genome'] != null ? config['genome'] : null;[m
         this.init();[m
     };[m
 [m
     Sense.constructor = Sense;[m
[31m-[m
[32m+[m[32m    $.extend(Sense.prototype, Genome.prototype);[m
     Sense.prototype.setDirection = function(v)[m
     {[m
[31m-        this.direction = v.getVectorAtAngle(this.genome.getGene('offset'));[m
[32m+[m[32m        this.direction = v.getVectorAtAngle(this.getGene('offset'));[m
     };[m
 [m
     Sense.prototype.init = function()[m
     {[m
[31m-        if(this.genome == null) this._initGenome();[m
         this._createInputs();[m
     };[m
 [m
[31m-    Sense.prototype._initGenome  = function()[m
[32m+[m[32m    Sense.prototype._initBaseGenome  = function()[m
     {[m
[31m-        this.genome = new Genome({[m
[32m+[m[32m        //this.initSenseGenome(this);[m
[32m+[m[32m        Genome.call(this, {[m
             vehicle:{[m
                 name:'vehiclew',[m
                 val:1,[m
[36m@@ -71,16 +76,16 @@[m [mfunction(Segment, Vector, Genome)[m
 [m
     Sense.prototype._createInputs = function()[m
     {[m
[31m-        var arc_section = this.genome.getGene('arc')/this.genome.getGene('count');[m
[31m-        var start_radian = -this.genome.getGene('arc')/2;[m
[32m+[m[32m        var arc_section = this.getGene('arc')/this.getGene('count');[m
[32m+[m[32m        var start_radian = -this.getGene('arc')/2;[m
         //var angle = -this.genome.getGene('arc')/2;[m
 [m
 [m
[31m-        for(var r = start_radian; r <= (this.genome.getGene('arc')/2); r += arc_section) {[m
[32m+[m[32m        for(var r = start_radian; r <= (this.getGene('arc')/2); r += arc_section) {[m
         //for(var r = 0; r <= this.genome.getGene('count'); r ++) {[m
         //    var s = this.direction.getVectorAtAngle(angle);[m
             var s = this.direction.getVectorAtAngle(r);[m
[31m-            s.normalize(this.genome.getGene('radius'));[m
[32m+[m[32m            s.normalize(this.getGene('radius'));[m
             this.inputs.push(new Segment({x:this.source.getX(), y:this.source.getY()},{x:s.getX(), y:s.getY()}));[m
             //angle += arc_section;[m
         }[m
[36m@@ -95,12 +100,12 @@[m [mfunction(Segment, Vector, Genome)[m
         this._createInputs();[m
     };[m
 [m
[31m-    Sense.prototype.replicate = function()[m
[32m+[m[32m    Sense.prototype.copy = function()[m
     {[m
         return new Sense({[m
             source: this.source,[m
             direction: this.direction,[m
[31m-            genome: this.genome.replicate()[m
[32m+[m[32m            genome: this.replicateGenome()[m
         });[m
     };[m
 [m
[36m@@ -112,7 +117,7 @@[m [mfunction(Segment, Vector, Genome)[m
 [m
     Sense.prototype._checkSense = function(object)[m
     {[m
[31m-        for (var i = 0; i < this.genome.getGene('count');  i++) {[m
[32m+[m[32m        for (var i = 0; i < this.inputs.length;  i++) {[m
             if (this.inputs[i].checkCircleIntersect(object.center, object.radius)) {[m
                 return new Vector(this.inputs[i].u.getX(), this.inputs[i].u.getY());[m
             }[m
[1mdiff --git a/public/assets/js/castles/c8/vehicles3/Vehicle4.js b/public/assets/js/castles/c8/vehicles3/Vehicle3.js[m
[1mindex 3a6b2df..1435364 100644[m
[1m--- a/public/assets/js/castles/c8/vehicles3/Vehicle3.js[m
[1m+++ b/public/assets/js/castles/c8/vehicles3/Vehicle3.js[m
[36m@@ -8,6 +8,12 @@[m [mfunction(Vector, Genome, Sense)[m
 {[m
     var Vehicle3 = function(config)[m
     {[m
[32m+[m[32m        if(config.genome == null){[m
[32m+[m[32m            this._initBaseGenome()[m
[32m+[m[32m        } else {[m
[32m+[m[32m            Genome.call(this, config.genome.genes);[m
[32m+[m[32m        }[m
[32m+[m
         this.uuid = 0;[m
         this.center = config['center'] != null ? config['center'] : new Vector(0,0);[m
 [m
[36m@@ -23,7 +29,7 @@[m [mfunction(Vector, Genome, Sense)[m
         //  Meta-attributes[m
         this.direction  = config['direction'] != null ? config['direction'] : new Vector(0,0);[m
         this.radialSize = 0;    //  computed based on the largest sensory radius[m
[31m-        this.genome = config['genome'] != null ? config['genome'] : null;[m
[32m+[m[32m        //this.genome = config['genome'] != null ? config['genome'] : null;[m
         this.ttd = 5000;[m
         this.full = 1500;[m
         this.hunger = 1500;[m
[36m@@ -33,6 +39,7 @@[m [mfunction(Vector, Genome, Sense)[m
     };[m
 [m
     Vehicle3.constructor = Vehicle3;[m
[32m+[m[32m    $.extend(Vehicle3.prototype, Genome.prototype);[m
     Vehicle3.prototype.drawInContext = function(ctx)[m
     {[m
         ctx.beginPath();[m
[36m@@ -56,8 +63,8 @@[m [mfunction(Vector, Genome, Sense)[m
 [m
     Vehicle3.prototype.drawSensesInContext = function(ctx)[m
     {[m
[31m-        for(var l = 0; l < this.genome.getGene('sensesCount'); l++){[m
[31m-            for(var m = 0; m < this.senses[l].genome.getGene('count'); m++) {[m
[32m+[m[32m        for(var l = 0; l < this.senses.length; l++){[m
[32m+[m[32m            for(var m = 0; m < this.senses[l].inputs.length; m++) {[m
                 ctx.strokeStyle = 'rgba(250,200,100, 0.2)';[m
                 this.senses[l].inputs[m].drawInContext(ctx);[m
             }[m
[36m@@ -68,12 +75,7 @@[m [mfunction(Vector, Genome, Sense)[m
     Vehicle3.prototype.init = function()[m
     {[m
         this._initIdentity();[m
[31m-        if(this.genome == null) this._initGenome();[m
[31m-        if(this.senses == null) {[m
[31m-            this._initSenses();[m
[31m-        } else {[m
[31m-            this._initSize();[m
[31m-        }[m
[32m+[m[32m        this._initSenses();[m
         return this;[m
     };[m
 [m
[36m@@ -102,8 +104,10 @@[m [mfunction(Vector, Genome, Sense)[m
         this.type = 'vehicle';[m
     };[m
 [m
[31m-    Vehicle3.prototype._initGenome =function(){[m
[31m-        this.genome = new Genome({[m
[32m+[m
[32m+[m
[32m+[m[32m    Vehicle3.prototype._initBaseGenome =function(){[m
[32m+[m[32m        Genome.call(this, {[m
             tSpeed : 5,[m
             rSpeed : 3,[m
             endurance : 50,[m
[36m@@ -134,36 +138,30 @@[m [mfunction(Vector, Genome, Sense)[m
 [m
     Vehicle3.prototype._initSenses = function()[m
     {[m
[31m-        this.senses = {};[m
[31m-        for(var i = 0; i < this.genome.getGene('sensesCount'); i ++){[m
[32m+[m[32m        this.senses = [];[m
[32m+[m[32m        for(var i = 0; i < this.getGene('sensesCount'); i ++){[m
             this.senses[i] = new Sense({[m
[32m+[m[32m                number : i,[m
[32m+[m[32m                genome : this.getGene('senses_' + i),[m
                 direction : this.direction,[m
                 center : this.center[m
             });[m
[31m-            this.radialSize = this.senses[i].genome.getGene('radius') > this.radialSize[m
[31m-                ? this.senses[i].genome.getGene('radius')[m
[31m-                : this.radialSize;[m
[31m-        }[m
[31m-    };[m
[31m-[m
[31m-    Vehicle3.prototype._initSize = function()[m
[31m-    {[m
[31m-        for(var i in this.senses) {[m
[31m-            this.radialSize = this.senses[i].genome.getGene('radius') > this.radialSize[m
[31m-                ? this.senses[i].genome.getGene('radius')[m
[32m+[m[32m            this.genes['senses_' + i] = this.senses[i].genes;[m
[32m+[m[32m            this.radialSize = this.senses[i].getGene('radius') > this.radialSize[m
[32m+[m[32m                ? this.senses[i].getGene('radius')[m
                 : this.radialSize;[m
         }[m
     };[m
 [m
     Vehicle3.prototype.getTailColor = function()[m
     {[m
[31m-        var r = this.genome.getGene('rColor');[m
[31m-        var g = this.genome.getGene('gColor');[m
[31m-        var b = this.genome.getGene('bColor');[m
[32m+[m[32m        var r = this.getGene('rColor');[m
[32m+[m[32m        var g = this.getGene('gColor');[m
[32m+[m[32m        var b = this.getGene('bColor');[m
         var a = 0.2 + this.hunger/this.full;[m
 [m
 [m
[31m-        return this.ghost ? 'rgba(0,0,0,0)' : 'rgba('+ r + ',' + g + ','+ b +','+ a +')';[m
[32m+[m[32m        return this.ghost ? 'rgba(0,0,0,0)' : 'rgba('+ r +','+ g +','+ b +','+ a +')';[m
     };[m
 [m
     Vehicle3.prototype.getBodyColor = function()[m
[36m@@ -190,7 +188,7 @@[m [mfunction(Vector, Genome, Sense)[m
     Vehicle3.prototype.move = function()[m
     {[m
         this.center.addVector(this.direction);[m
[31m-        for(var i = 0; i < this.genome.getGene('sensesCount'); i++){[m
[32m+[m[32m        for(var i = 0; i < this.getGene('sensesCount'); i++){[m
             this.senses[i].resetSenses(this.center, this.direction);[m
         }[m
     };[m
[36m@@ -199,13 +197,13 @@[m [mfunction(Vector, Genome, Sense)[m
     {[m
         var m = this.direction.getMagnitude();[m
 [m
[31m-        if(m > this.genome.getGene('tSpeed')) {[m
[31m-            this.direction.setMagnitude(this.genome.getGene('tSpeed'));[m
[31m-        } else if(m > this.genome.getGene('rSpeed')) {[m
[31m-            this.direction.setMagnitude(m - m/this.genome.getGene('endurance'));[m
[32m+[m[32m        if(m > this.getGene('tSpeed')) {[m
[32m+[m[32m            this.direction.setMagnitude(this.getGene('tSpeed'));[m
[32m+[m[32m        } else if(m > this.getGene('rSpeed')) {[m
[32m+[m[32m            this.direction.setMagnitude(m - m/this.getGene('endurance'));[m
         }[m
 [m
[31m-        for(var i = 0; i < this.genome.getGene('sensesCount'); i ++) {[m
[32m+[m[32m        for(var i = 0; i < this.getGene('sensesCount'); i ++) {[m
             this.direction.addVector(this.senses[i].sensation);[m
         }[m
         this.live();[m
[36m@@ -214,30 +212,29 @@[m [mfunction(Vector, Genome, Sense)[m
 [m
     Vehicle3.prototype.reproduce = function()[m
     {[m
[31m-        var g = this.genome.replicate();[m
[31m-        var nSenses = [];[m
[31m-        for(var x = 0; x < g.getGene('sensesCount'); x++) {[m
[31m-            if(this.senses[x] != null){[m
[31m-                nSenses.push(this.senses[x].replicate());[m
[31m-            } else {[m
[31m-                nSenses.push(new Sense({[m
[31m-                    direction : this.direction,[m
[31m-                    source : this.center[m
[31m-                }));[m
[31m-            }[m
[31m-        }[m
[32m+[m[32m        //var g = this.replicate();[m
[32m+[m[32m        //var nSenses = [];[m
[32m+[m[32m        //for(var x = 0; x < g.getGene('sensesCount'); x++) {[m
[32m+[m[32m        //    if(this.senses[x] != null){[m
[32m+[m[32m        //        nSenses.push(this.senses[x].replicate());[m
[32m+[m[32m        //    } else {[m
[32m+[m[32m        //        nSenses.push(new Sense({[m
[32m+[m[32m        //            direction : this.direction,[m
[32m+[m[32m        //            source : this.center[m
[32m+[m[32m        //        }));[m
[32m+[m[32m        //    }[m
[32m+[m[32m        //}[m
 [m
         return new Vehicle3({[m
[31m-            genome : g,[m
[32m+[m[32m            genome : this.replicateGenome(),[m
             center : new Vector(this.center.getX() + 50, this.center.getY() + 50),[m
[31m-            direction : this.direction.getVectorAtAngle(Math.PI),[m
[31m-            senses: nSenses[m
[32m+[m[32m            direction : this.direction.getVectorAtAngle(Math.PI)[m
         });[m
     };[m
 [m
     Vehicle3.prototype.eat = function(object)[m
     {[m
[31m-        this.hunger += object.genome.getGene('nutrition');[m
[32m+[m[32m        this.hunger += object.getGene('nutrition');[m
         if(this.hunger > this.full){[m
             this.hunger = this.full;[m
         }[m
[36m@@ -245,16 +242,16 @@[m [mfunction(Vector, Genome, Sense)[m
 [m
     Vehicle3.prototype.live = function()[m
     {[m
[31m-        this.hunger -= this.genome.getGene('metabolism') + this.direction.getMagnitude();[m
[32m+[m[32m        this.hunger -= this.getGene('metabolism') + this.direction.getMagnitude();[m
         this.ttd --;[m
     };[m
 [m
     Vehicle3.prototype.sense = function(object)[m
     {[m
[31m-        for(var i = 0; i < this.genome.getGene('sensesCount'); i ++){[m
[32m+[m[32m        for(var i = 0; i < this.getGene('sensesCount'); i ++){[m
             var type = object.type;[m
             this.senses[i].sense(object);[m
[31m-            this.senses[i].sensation.normalize(this.senses[i].genome.getGene(type));[m
[32m+[m[32m            this.senses[i].sensation.normalize(this.senses[i].getGene(type));[m
         }[m
     };[m
 [m
[1mdiff --git a/public/assets/js/castles/c8/vehicles3/Vehicles4.js b/public/assets/js/castles/c8/vehicles3/Vehicles3.js[m
[1mindex 27985e6..78ca41f 100644[m
[1m--- a/public/assets/js/castles/c8/vehicles3/Vehicles3.js[m
[1m+++ b/public/assets/js/castles/c8/vehicles3/Vehicles3.js[m
[36m@@ -209,7 +209,7 @@[m [mfunction(Canvas, VectorND, Vehicle, Plant){[m
                 this.plants[j].spore --;[m
                 continue;[m
             }[m
[31m-            var grow = this.plants[j].genome.getGene('growthRate');[m
[32m+[m[32m            var grow = this.plants[j].getGene('growthRate');[m
             this.plants[j].grow();[m
             if(Math.random() * grow > grow-1 && pl < 3000){[m
                 this.plants.push(this.plants[j].reproduce(w, h));[m
